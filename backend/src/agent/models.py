from pydantic import BaseModel
from textwrap import dedent


class AgentResponse(BaseModel):
    """Structured response model for the RAG agent's outputs.

    This Pydantic model defines the schema for responses generated by the Federal
    Reserve speech analysis agent. It enforces a consistent structure that separates
    the answer content from source citations, enabling better traceability and
    verification of agent responses.

    The model provides a custom string representation that formats the response
    in a human-readable format with the answer and sources clearly delineated.

    Attributes:
        answer (str): The main response text generated by the agent. This should
            be a natural language answer to the user's query, synthesized from
            the retrieved Federal Reserve speech documents.
        sources (list[str]): A list of source references or citations that support
            the answer. Each source typically corresponds to a Federal Reserve
            speech or document that was used to generate the response. This enables
            users to verify the information and explore the original sources.

    Example:
        >>> response = AgentResponse(
        ...     answer="The Federal Reserve raised interest rates by 0.25%.",
        ...     sources=["Speech by Jerome Powell, 2024-03-20", "FOMC Statement, 2024-03-21"]
        ... )
        >>> print(response)
        Answer: The Federal Reserve raised interest rates by 0.25%.

        Sources: ['Speech by Jerome Powell, 2024-03-20', 'FOMC Statement, 2024-03-21']

    Note:
        - Inherits from Pydantic BaseModel for automatic validation and serialization
        - Custom __str__ method provides formatted output for logging and display
        - Sources should be specific and verifiable references
        - This model is used as the output_type for the agent configuration
    """

    answer: str
    sources: list[str]

    def __str__(self):
        """Return a formatted string representation of the agent response.

        Formats the response with labeled sections for the answer and sources,
        making it easy to read in logs, console output, or user interfaces.

        Returns:
            str: A dedented, multi-line string with "Answer:" and "Sources:"
                sections clearly separated by newlines.
        """
        return dedent(f"""
            Answer: {self.answer}\n
            Sources: {self.sources}
        """)
