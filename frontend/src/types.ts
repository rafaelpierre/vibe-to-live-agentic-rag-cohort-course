/**
 * Represents a single message in the chat conversation.
 *
 * This interface defines the structure for both user and assistant messages
 * displayed in the chat UI. Each message is uniquely identified and timestamped,
 * with optional source citations for assistant responses.
 */
export interface ChatMessage {
  /** Unique identifier for the message, used as React key and for message tracking */
  id: string;

  /** The role of the message sender - either 'user' for human input or 'assistant' for AI responses */
  role: "user" | "assistant";

  /** The text content of the message to be displayed in the chat interface */
  content: string;

  /**
   * Optional array of source URLs or references that support the assistant's answer.
   * Only populated for assistant messages when the RAG agent provides citations
   * from Federal Reserve speeches.
   */
  sources?: string[];

  /** The time when the message was created, used for sorting and display purposes */
  timestamp: Date;
}

/**
 * Response structure from the backend RAG agent API.
 *
 * This interface matches the AgentResponse Pydantic model from the backend,
 * ensuring type safety across the full stack. The backend returns this structure
 * after processing a user query through the RAG pipeline.
 */
export interface AgentResponse {
  /**
   * The synthesized answer from the RAG agent, generated by combining
   * information retrieved from Federal Reserve speeches with LLM reasoning.
   */
  answer: string;

  /**
   * Array of source references or citations from the knowledge base.
   * Each source typically includes metadata like speaker, date, or document ID
   * from the Federal Reserve speeches that were used to generate the answer.
   */
  sources: string[];
}

/**
 * Request payload sent to the backend chat API endpoint.
 *
 * This simple interface wraps the user's message text for transmission
 * to the POST /chat endpoint.
 */
export interface ChatRequest {
  /** The user's question or query about Federal Reserve speeches */
  message: string;
}
