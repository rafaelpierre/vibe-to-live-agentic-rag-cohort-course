name: Build and Push Frontend Docker Image

on:
  push:
    branches:
      - main
      - feature/**
    paths:
      - 'frontend/**'
      - '.github/workflows/docker-build-push-frontend.yml'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'
      - '.github/workflows/docker-build-push-frontend.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      
    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
      image-metadata: ${{ steps.meta.outputs.json }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          no-cache: true
          provenance: false
          sbom: false
          outputs: type=docker,dest=/tmp/frontend-image.tar
          build-args: |
            VITE_API_URL=${{ secrets.VITE_API_URL }}
        env:
          BUILDX_NO_DEFAULT_ATTESTATIONS: 1

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-docker-image
          path: /tmp/frontend-image.tar
          retention-days: 1

  push:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
      
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-docker-image
          path: /tmp

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Load and push image
        env:
          METADATA: ${{ needs.build.outputs.image-metadata }}
        run: |
          # Load the image from tar file
          docker load --input /tmp/frontend-image.tar
          
          # Extract tags from metadata
          TAGS=$(echo "$METADATA" | jq -r '.tags[]')
          
          # Push each tag
          for tag in $TAGS; do
            echo "Pushing $tag"
            docker push "$tag" || (echo "Retrying $tag" && sleep 5 && docker push "$tag")
          done
